name: CI
on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm install
    - name: Build Frontend
      run: npm run build
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DockerUsername }}
        password: ${{ secrets.DockerPassword }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.lite
        platforms: linux/amd64
        push: true
        tags: crowdcontrol/frontend:latest
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
  deployment:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
    - uses: actions/checkout@v1
    - uses: benjlevesque/short-sha@v1.1
      id: short-sha
      with:
        length: 7
    - name: Deploy
      uses: floms/action-caprover@v1
      with:
        host: 'https://captain.app.crowdcontrol.network'
        password: '${{ secrets.CAPROVER_PASSWORD }}'
        app: 'crowdcontrol-frontend'
        image: 'crowdcontrol/frontend:${{ steps.docker_build.outputs.digest }}'
